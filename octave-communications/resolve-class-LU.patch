From 066d84c6ac0cb41436dec18e061ee58b03f24d20 Mon Sep 17 00:00:00 2001
From: Clemens Buchacher <drizzd@aon.at>
Date: Sun, 4 Mar 2012 23:16:03 +0100
Subject: [PATCH] resolve 'class LU' name conflict with dbleLU.h


Signed-off-by: Clemens Buchacher <drizzd@aon.at>
---
 src/galois.cc |   16 ++++++++--------
 src/galois.h  |   14 +++++++-------
 src/gf.cc     |    6 +++---
 3 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/src/galois.cc b/src/galois.cc
index c1c4dd3..72eb886 100644
--- a/src/galois.cc
+++ b/src/galois.cc
@@ -882,7 +882,7 @@ galois::exp (void) const
 template class base_lu <galois>;
 
 void
-LU::factor (const galois& a, const pivot_type& typ)
+LUg::factor (const galois& a, const pivot_type& typ)
 {
   int a_nr = a.rows ();
   int a_nc = a.cols ();
@@ -898,7 +898,7 @@ LU::factor (const galois& a, const pivot_type& typ)
     int jp = j;
 
     // Find the pivot and test for singularity
-    if (ptype == LU::ROW) { 
+    if (ptype == LUg::ROW) { 
       for (int i = j+1; i < a_nr; i++)
 	if (a_fact(i,j) > a_fact(jp,j))
 	  jp = i;
@@ -911,7 +911,7 @@ LU::factor (const galois& a, const pivot_type& typ)
     ipvt(j) = jp;
 
     if (a_fact(jp,j) != 0) {
-      if (ptype == LU::ROW) { 
+      if (ptype == LUg::ROW) { 
 	// Apply the interchange to columns 1:NC.
 	if (jp != j)
 	  for (int i = 0; i < a_nc; i++) {
@@ -962,7 +962,7 @@ LU::factor (const galois& a, const pivot_type& typ)
 }
 
 galois
-LU::L (void) const
+LUg::L (void) const
 {
   int a_nr = a_fact.rows ();
   int a_nc = a_fact.cols ();
@@ -981,7 +981,7 @@ LU::L (void) const
 }
 
 galois
-LU::U (void) const
+LUg::U (void) const
 {
   int a_nr = a_fact.rows ();
   int a_nc = a_fact.cols ();
@@ -1049,7 +1049,7 @@ galois::determinant (int& info) const
     info = 0;
     retval(0,0) = 1;
   } else {
-    LU fact (*this);
+    LUg fact (*this);
 
     if ( ! fact.singular()) {
       galois A (fact.a_fact);
@@ -1110,7 +1110,7 @@ galois::solve (const galois& b, int& info,
     return galois();
   } else if (nc > nr) {
     // Under-determined system, use column interchanges.
-    LU fact ((*this), LU::COL);
+    LUg fact ((*this), LUg::COL);
 
     if (fact.singular()) {
       info = -1;
@@ -1173,7 +1173,7 @@ galois::solve (const galois& b, int& info,
     }
     
   } else {
-    LU fact (*this);
+    LUg fact (*this);
 
     if (fact.singular()) {
       info = -1;
diff --git a/src/galois.h b/src/galois.h
index 7b5b086..73f1f0f 100644
--- a/src/galois.h
+++ b/src/galois.h
@@ -131,7 +131,7 @@ public:
 };
 
 class
-LU : public base_lu <galois>
+LUg : public base_lu <galois>
 {
   friend class galois;
 public:
@@ -141,15 +141,15 @@ public:
     COL
   };
 
-  LU (void) : base_lu <galois> () { }
+  LUg (void) : base_lu <galois> () { }
 
-  LU (const galois& a, const pivot_type& typ) { factor (a, typ); }
+  LUg (const galois& a, const pivot_type& typ) { factor (a, typ); }
 
-  LU (const galois& a) { factor (a, LU::ROW); }
+  LUg (const galois& a) { factor (a, LUg::ROW); }
 
-  LU (const LU& a) : base_lu <galois> (a) { }
+  LUg (const LUg& a) : base_lu <galois> (a) { }
 
-  LU& operator = (const LU& a)
+  LUg& operator = (const LUg& a)
     {
       if (this != &a)
 	base_lu <galois> :: operator = (a);
@@ -157,7 +157,7 @@ public:
       return *this;
     }
 
-  ~LU (void) { }
+  ~LUg (void) { }
 
   galois L (void) const;
 
diff --git a/src/gf.cc b/src/gf.cc
index 9dbe9b4..c622a6b 100644
--- a/src/gf.cc
+++ b/src/gf.cc
@@ -776,8 +776,8 @@ DEFUN_DLD (gfilter, args, nargout,
 DEFUN_DLD (glu, args, nargout,
   "-*- texinfo -*-\n"
 "@deftypefn {Loadable Function} {[@var{l}, @var{u}, @var{p}] =} glu (@var{a})\n"
-"@cindex LU decomposition of Galois matrix\n"
-"Compute the LU decomposition of @var{a} in a Galois Field. The result is\n" 
+"@cindex LUg decomposition of Galois matrix\n"
+"Compute the LUg decomposition of @var{a} in a Galois Field. The result is\n" 
 "returned in a permuted form, according to the optional return value\n"
 "@var{p}.  For example, given the matrix\n"
 "@code{a = gf([1, 2; 3, 4],3)},\n"
@@ -855,7 +855,7 @@ DEFUN_DLD (glu, args, nargout,
   }
 
   if (! error_state) {
-    LU fact (m);
+    LUg fact (m);
 
     switch (nargout) {
     case 0:
-- 
1.7.9.2

