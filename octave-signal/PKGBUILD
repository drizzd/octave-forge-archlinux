# Maintainer: Clemens Buchacher <drizzd@aon.at>
pkgname=octave-signal
pkgver=1.0.11
pkgrel=1
pkgdesc="Signal processing tools, including filtering, windowing and display functions.

Signals
 diric 
 gauspuls 
 gmonopuls
 pulstran 
 tripuls 
 rectpuls 
 sawtooth 
 square 
 chirp 
 strips 
 specgram 
 buffer
 mexihat
 meyeraux
 morlet
 shanwavf
 cmorwavf
Filtering
 filtfilt 
 filtic 
 latcfilt 
 sgolayfilt 
 sosfilt 
 medfilt1 
Filter analysis
 freqs freqs_plot
 freqspace 
 grpdelay 
 impz 
 zplane 
 fwhm
Filter conversion
 ac2poly 
 poly2ac 
 ac2rc 
 rc2ac 
 poly2rc 
 rc2poly 
 convmtx 
 latc2tf 
 residuez 
 residued
 sos2ss 
 sos2tf 
 sos2zp 
 ss2sos 
 tf2latc 
 tf2sos 
 zp2sos 
 polystab 
IIR Filter design
 besself 
 butter 
 cheby1 
 cheby2 
 ellip
 ncauer
 maxflat 
 buttord 
 cheb1ord 
 cheb2ord 
 ellipord 
 besselap 
 sftrans
 bilinear 
 impinvar 
 ellipdemo
FIR filter design
 fir1 
 fir2 
 fircls 
 fircls1 
 firls 
 firrcos 
 intfilt 
 kaiserord 
 cremez 
 remez 
 remezord 
 sgolay 
 qp_kaiser
 cl2bp
Transforms
 czt 
 dctmtx 
 dct2 
 idct2 
 dct 
 idct
 dst
 idst
 dftmtx 
 hilbert 
 rceps 
 cceps 
 icceps 
 cplxreal
 bitrevorder
 dwt
 fht
 ifht
Power spectrum analysis
 pwelch 
 tfe 
 tfestimate 
 cohere 
 csd 
 ar_psd
 cpsd
 mscohere
 pburg 
 pyulear 
 xcorr
 xcorr2 
 xcov 
 __power
Window functions
 window
 barthannwin
 blackmanharris
 blackmannuttall
 bohmanwin
 boxcar 
 chebwin flattopwin
 hann
 kaiser 
 nuttallwin
 triang 
 gaussian gausswin
 tukeywin
 rectwin
 welchwin
 parzenwin
System identification
 arburg 
 aryule 
 invfreq
 invfreqs 
 invfreqz 
 levinson
 lpc 
 rlevinson 
 stmcb 
Sample rate change
 decimate 
 interp 
 downsample
 upsample
 resample 
 upfirdn 
Compatibility
 buttap: use butter(n,1,'s')
 cheb1ap: use cheby1(n,Rp,1,'s')
 cheb2ap: use cheby2(n,Rs,1,'s')
 ellipap: use ellip(n,Rp,Rs,1,'s')
 lp2bp: use sftrans
 lp2bs: use sftrans
 lp2hp: use sftrans
 lp2lp: use sftrans
 yulewalk: use yulewalker
Utility
 buffer
 fracshift
 wkeep
 wrev
 zerocrossing
 sampled2continuous
"
arch=(any)
url="http://octave.sourceforge.net/signal/"
license=('GPL2')
depends=('octave>2.9.9' 'octave-optim>=1.0.0' 'octave-specfun')
makedepends=()
optdepends=()
backup=()
options=()
install=octave-signal.install
source=("http://downloads.sourceforge.net/octave/signal-$pkgver.tar.gz")
noextract=("signal-$pkgver.tar.gz")
md5sums=('808a4b5d3c7953e1ac66ef870693cfa5')

build() {
  cd "$srcdir"
  mkdir -p $pkgdir/usr/share/octave/packages
  mkdir -p $pkgdir/usr/lib/octave/packages
  mkdir -p builddir
  echo "pkg build -nodeps builddir signal-$pkgver.tar.gz" | octave --silent
  cp builddir/signal-$pkgver.tar.gz $pkgdir/usr/share/octave/signal.tar.gz
}
